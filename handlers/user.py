from aiogram import Dispatcher
from aiogram.types import Message
from aiogram.dispatcher.filters import Text

async def handle_trial(message: Message):
    await message.answer("üéÅ –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ 1 –¥–µ–Ω—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n–°–∫–æ—Ä–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω).")

async def handle_support(message: Message):
    await message.answer("üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞:\n\n–ù–∞–ø–∏—à–∏—Ç–µ @your_support_username")

async def handle_profile(message: Message):
    await message.answer("üë§ –í–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ).")

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(handle_trial, Text(equals="üéÅ –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø"))
    dp.register_message_handler(handle_support, Text(equals="üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞"))
    dp.register_message_handler(handle_profile, Text(equals="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"))
