from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config import ADMIN_ID

router = Router()

class AnswerState(StatesGroup):
    waiting_for_answer = State()

# –ö–Ω–æ–ø–∫–∞ "–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
@router.callback_query(F.data == "contact_admin")
async def contact_admin(callback: CallbackQuery):
    await callback.message.answer("‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –∑–¥–µ—Å—å.")
    await callback.answer()

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –æ–Ω–æ —É—Ö–æ–¥–∏—Ç –∞–¥–º–∏–Ω—É —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–≤–µ—Ç–∏—Ç—å"
@router.message(F.chat.type == "private")
async def handle_user_message(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"reply_{message.from_user.id}")]
    ])

    await message.bot.send_message(
        chat_id=643408817,
        text=f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or message.from_user.id}:\n\n{message.text}",
        reply_markup=keyboard
    )

    await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –ê–¥–º–∏–Ω –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å"
@router.callback_query(F.data.startswith("reply_"))
async def start_reply(callback: CallbackQuery, state: FSMContext):
    try:
        user_id = int(callback.data.split("_")[1])
    except (IndexError, ValueError):
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –≤ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    await state.set_state(AnswerState.waiting_for_answer)
    await state.update_data(target_user_id=user_id)

    await callback.message.answer(f"‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ID: {user_id}")
    await callback.answer()

# –ê–¥–º–∏–Ω –≤–≤—ë–ª –æ—Ç–≤–µ—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
@router.message(AnswerState.waiting_for_answer)
async def send_reply_to
